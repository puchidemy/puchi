name: Infra Deploy

on:
  push:
    branches: [main, develop, "release/*"]
    paths:
      - "infra/**"
      - ".github/workflows/infra-only.yml"
  workflow_dispatch: {}

jobs:
  deploy-infra:
    runs-on: self-hosted
    env:
      KUBECONFIG: /home/anony/.kube/config.yaml
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup kubectl
        run: |
          if [ -f "$KUBECONFIG" ]; then echo "Using host kubeconfig at $KUBECONFIG"; else echo "KUBECONFIG not found at $KUBECONFIG" >&2; exit 1; fi

      - name: Ensure unzip is installed
        run: |
          if command -v unzip >/dev/null 2>&1; then
            echo "unzip already installed"
            exit 0
          fi
          if [ "$(id -u)" -eq 0 ]; then SUDO=""; else SUDO="sudo -n"; fi
          if command -v apt-get >/dev/null 2>&1; then
            ${SUDO} apt-get update -y
            DEBIAN_FRONTEND=noninteractive ${SUDO} apt-get install -y unzip
          elif command -v yum >/dev/null 2>&1; then
            ${SUDO} yum install -y unzip
          elif command -v apk >/dev/null 2>&1; then
            ${SUDO} apk add --no-cache unzip
          else
            echo "Package manager not detected; please install unzip on the runner" >&2
            exit 1
          fi

      - name: Setup Helm
        uses: azure/setup-helm@v3
        with:
          version: "3.10.0"

      - name: Install/Upgrade APISIX via Helm
        run: |
          helm repo add apisix https://charts.apiseven.com
          helm repo update
          helm upgrade --install apisix apisix/apisix \
            --namespace apisix \
            --create-namespace \
            -f infra/k8s/platform/apisix/helm-values.yaml

      - name: Apply platform (cloudflared etc.)
        run: |
          kubectl -n platform create secret generic cloudflared-secret \
            --from-literal=TUNNEL_TOKEN='${{ secrets.K8S_CLOUDFLARED_TUNNEL_TOKEN }}' \
            --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -k infra/k8s/base
          kubectl apply -k infra/k8s/platform
